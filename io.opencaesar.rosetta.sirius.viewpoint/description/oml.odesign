<?xml version="1.0" encoding="UTF-8"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:description_1="http://www.eclipse.org/sirius/diagram/description/1.1.0" xmlns:properties="http://www.eclipse.org/sirius/properties/1.0.0" xmlns:properties-ext-widgets-reference="http://www.eclipse.org/sirius/properties/1.0.0/ext/widgets/reference" xmlns:style="http://www.eclipse.org/sirius/diagram/description/style/1.1.0" xmlns:tool="http://www.eclipse.org/sirius/diagram/description/tool/1.1.0" xmlns:tool_1="http://www.eclipse.org/sirius/description/tool/1.1.0" name="oml" version="15.4.0.202401051836">
  <ownedViewpoints name="Descriptions" modelFileExtension="oml">
    <ownedRepresentations xsi:type="description_1:DiagramDescription" dropDescriptions="//@ownedViewpoints[name='Descriptions']/@ownedRepresentations[name='Description%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Diagram%20Drop']" name="Description Diagram" label="Description Viewer" titleExpression="aql:self.prefix.toUpperFirst()+' Viewer'" domainClass="oml.Description" enablePopupBars="true">
      <metamodel href="http://opencaesar.io/oml#/"/>
      <layout xsi:type="description_1:CustomLayoutConfiguration" id="org.eclipse.elk.layered" label="ELK Layered" description="Layer-based algorithm provided by the Eclipse Layout Kernel. Arranges as many edges as possible into one direction by placing nodes into subsequent layers. This implementation supports different routing styles (straight, orthogonal, splines); if orthogonal routing is selected, arbitrary port constraints are respected, thus enabling the layout of block diagrams such as actor-oriented models or circuit schematics. Furthermore, full layout of compound graphs with cross-hierarchy edges is supported when the respective option is activated on the top level.">
        <layoutOptions xsi:type="description_1:EnumLayoutOption" id="org.eclipse.elk.direction">
          <targets>PARENT</targets>
          <value name="UP"/>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.layered.spacing.edgeNodeBetweenLayers" value="15.0">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.spacing.edgeNode" value="20.0">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:EnumLayoutOption" id="org.eclipse.elk.edgeRouting">
          <targets>PARENT</targets>
          <value name="ORTHOGONAL"/>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.spacing.edgeEdge" value="10.0">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.layered.spacing.nodeNodeBetweenLayers" value="30.0">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.spacing.nodeSelfLoop" value="5.0">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:EnumSetLayoutOption" id="org.eclipse.elk.nodeSize.options">
          <targets>NODE</targets>
          <values name="MINIMUM_SIZE_ACCOUNTS_FOR_PADDING"/>
          <values name="COMPUTE_PADDING"/>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:EnumSetLayoutOption" id="org.eclipse.elk.nodeSize.constraints">
          <targets>NODE</targets>
          <values name="MINIMUM_SIZE"/>
          <values name="NODE_LABELS"/>
        </layoutOptions>
      </layout>
      <defaultLayer name="Default">
        <edgeMappings name="LinkAssertion" deletionDescription="//@ownedViewpoints[name='Descriptions']/@ownedRepresentations[name='Description%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete']" semanticCandidatesExpression="aql:self.getVisualizableLinks()" doubleClickDescription="//@ownedViewpoints[name='Descriptions']/@ownedRepresentations[name='Description%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='SelectInEditor']" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='Descriptions']/@ownedRepresentations[name='Description%20Diagram']/@defaultLayer/@containerMappings[name='ConceptInstance'] //@ownedViewpoints[name='Descriptions']/@ownedRepresentations[name='Description%20Diagram']/@defaultLayer/@edgeMappings[name='RelationInstance']" targetMapping="//@ownedViewpoints[name='Descriptions']/@ownedRepresentations[name='Description%20Diagram']/@defaultLayer/@containerMappings[name='ConceptInstance'] //@ownedViewpoints[name='Descriptions']/@ownedRepresentations[name='Description%20Diagram']/@defaultLayer/@edgeMappings[name='RelationInstance']" targetFinderExpression="aql:self.getObject()" sourceFinderExpression="aql:self.getSubject()" domainClass="oml.PropertyValueAssertion" useDomainElement="true">
          <style sizeComputationExpression="2" routingStyle="manhattan">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:view.getSemanticDiagram().getOntology().getLabel(self)">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="RelationInstance" deletionDescription="//@ownedViewpoints[name='Descriptions']/@ownedRepresentations[name='Description%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete']" semanticCandidatesExpression="aql:self.getVisualizableNamedInstances()" doubleClickDescription="//@ownedViewpoints[name='Descriptions']/@ownedRepresentations[name='Description%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='SelectInEditor']" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='Descriptions']/@ownedRepresentations[name='Description%20Diagram']/@defaultLayer/@containerMappings[name='ConceptInstance']" targetMapping="//@ownedViewpoints[name='Descriptions']/@ownedRepresentations[name='Description%20Diagram']/@defaultLayer/@containerMappings[name='ConceptInstance']" targetFinderExpression="aql:self.targets->at(1)" sourceFinderExpression="aql:self.sources->at(1)" domainClass="oml.RelationInstance" useDomainElement="true">
          <style sizeComputationExpression="2" routingStyle="manhattan">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:diagram.getOntology().getLabel(self)">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="ConceptInstance" deletionDescription="//@ownedViewpoints[name='Descriptions']/@ownedRepresentations[name='Description%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete']" semanticCandidatesExpression="aql:self.getVisualizableNamedInstances()" doubleClickDescription="//@ownedViewpoints[name='Descriptions']/@ownedRepresentations[name='Description%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='SelectInEditor']" domainClass="oml.ConceptInstance" childrenPresentation="List">
          <subNodeMappings name="Property Values" deletionDescription="//@ownedViewpoints[name='Descriptions']/@ownedRepresentations[name='Description%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete']" semanticCandidatesExpression="aql:diagram.target.oclAsType(oml::Description).getVisualizableScalarPropertyValues(self)" doubleClickDescription="//@ownedViewpoints[name='Descriptions']/@ownedRepresentations[name='Description%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='SelectInEditor']" synchronizationLock="true" domainClass="oml.PropertyValueAssertion">
            <style xsi:type="style:SquareDescription" labelSize="12" showIcon="false" labelExpression="aql:view.getSemanticDiagram().getOntology().getLabel(self)" labelAlignment="LEFT" tooltipExpression="aql:view.getSemanticDiagram().getOntology().getLabel(self)" labelPosition="node" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="aql:diagram.getOntology().getLabel(self)" iconPath="/io.opencaesar.rosetta.sirius.viewpoint/icons/i-icon.png" tooltipExpression="aql:view.getSemanticDiagram().getOntology().getLabel(self)" backgroundStyle="GradientTopToBottom">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <toolSections name="Tools">
          <ownedTools xsi:type="tool:DoubleClickDescription" name="SelectInEditor" mappings="//@ownedViewpoints[name='Descriptions']/@ownedRepresentations[name='Description%20Diagram']/@defaultLayer/@containerMappings[name='ConceptInstance'] //@ownedViewpoints[name='Descriptions']/@ownedRepresentations[name='Description%20Diagram']/@defaultLayer/@containerMappings[name='ConceptInstance']/@subNodeMappings[name='Property%20Values'] //@ownedViewpoints[name='Descriptions']/@ownedRepresentations[name='Description%20Diagram']/@defaultLayer/@edgeMappings[name='LinkAssertion'] //@ownedViewpoints[name='Descriptions']/@ownedRepresentations[name='Description%20Diagram']/@defaultLayer/@edgeMappings[name='RelationInstance']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.openAndSelectInEditor()"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="Delete" precondition="aql:false">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerDropDescription" name="Diagram Drop" precondition="aql:true" mappings="//@ownedViewpoints[name='Descriptions']/@ownedRepresentations[name='Description%20Diagram']/@defaultLayer/@containerMappings[name='ConceptInstance']" dragSource="PROJECT_EXPLORER">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.oclAsType(oml::IdentifiedElement).getOntology() &lt;> container">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='Descriptions']/@ownedRepresentations[name='Description%20Diagram']/@defaultLayer/@containerMappings[name='ConceptInstance']/@style" referenceName="foregroundColor">
              <value href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
            </featureCustomizations>
          </vsmElementCustomizations>
        </customization>
      </defaultLayer>
    </ownedRepresentations>
    <ownedJavaExtensions qualifiedClassName="io.opencaesar.oml.util.OmlRead"/>
    <ownedJavaExtensions qualifiedClassName="io.opencaesar.oml.util.OmlSearch"/>
    <ownedJavaExtensions qualifiedClassName="io.opencaesar.rosetta.sirius.viewpoint.internal.OmlServices"/>
    <ownedJavaExtensions qualifiedClassName="io.opencaesar.rosetta.sirius.utils.UIServices"/>
  </ownedViewpoints>
  <ownedViewpoints name="Vocabularies" modelFileExtension="oml">
    <ownedRepresentations xsi:type="description_1:DiagramDescription" dropDescriptions="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Member%20from%20treeview']" documentation="&lt;html>&#xA;&lt;head>&#xA;&lt;/head>&#xA;&lt;body>&#xA;&lt;p>Provides a class diagram to represent members of an OML vocabulary.&lt;/p>&#xA;&lt;br>&#xA;&lt;/body>&#xA;&lt;/html>&#xA;&#xA;&#xA;" endUserDocumentation="A class diagram to represent OML vocabulary models" name="Vocabulary Editor" titleExpression="aql:self.prefix.toUpperFirst()+' Editor'" domainClass="oml.Vocabulary" enablePopupBars="true">
      <metamodel href="http://opencaesar.io/oml#/"/>
      <layout xsi:type="description_1:CustomLayoutConfiguration" id="org.eclipse.elk.layered" label="ELK Layered" description="Layer-based algorithm provided by the Eclipse Layout Kernel. Arranges as many edges as possible into one direction by placing nodes into subsequent layers. This implementation supports different routing styles (straight, orthogonal, splines); if orthogonal routing is selected, arbitrary port constraints are respected, thus enabling the layout of block diagrams such as actor-oriented models or circuit schematics. Furthermore, full layout of compound graphs with cross-hierarchy edges is supported when the respective option is activated on the top level.">
        <layoutOptions xsi:type="description_1:EnumSetLayoutOption" id="org.eclipse.elk.nodeSize.constraints">
          <targets>NODE</targets>
          <values name="NODE_LABELS"/>
          <values name="MINIMUM_SIZE"/>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:EnumLayoutOption" id="org.eclipse.elk.direction">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.layered.spacing.edgeEdgeBetweenLayers" value="15.0">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.spacing.edgeNode" value="20.0">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:EnumLayoutOption" id="org.eclipse.elk.edgeRouting">
          <targets>PARENT</targets>
          <value name="ORTHOGONAL"/>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.spacing.edgeEdge" value="10.0">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.layered.spacing.nodeNodeBetweenLayers" value="30.0">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.spacing.nodeSelfLoop" value="5.0">
          <targets>PARENT</targets>
        </layoutOptions>
      </layout>
      <defaultLayer name="Default">
        <nodeMappings name="Empty" preconditionExpression="aql:containerView.oclAsType(diagram::DDiagram).ownedDiagramElements.target->excluding(containerView.oclAsType(diagram::DSemanticDiagram).target)->size() = 0 and container.getVisualizableMembers()->size() > 0" deletionDescription="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='None']" semanticCandidatesExpression="aql:self" doubleClickDescription="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Add%20Related%20Elements']" domainClass="oml.Vocabulary">
          <style xsi:type="style:WorkspaceImageDescription" labelSize="100" showIcon="false" labelExpression="\n\n\n\n\n" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/io.opencaesar.rosetta.sirius.viewpoint/icons/empty.svg">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <edgeMappings name="SpecializationAxiom" deletionDescription="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Recursive']" semanticCandidatesExpression="aql:self.getVisualizableSpecializations()" doubleClickDescription="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Select%20in%20Editor']" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Concept'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Aspect'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='RelationEntity'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Structure'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Scalar']" targetMapping="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Concept'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Aspect'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='RelationEntity'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Structure'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Scalar']" targetFinderExpression="aql:self.superTerm" sourceFinderExpression="aql:self.getSubTerm()" domainClass="oml.SpecializationAxiom" useDomainElement="true">
          <style targetArrow="InputClosedArrow" routingStyle="manhattan">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
          </style>
        </edgeMappings>
        <edgeMappings name="PropertyRangeRestrictionAxiom" deletionDescription="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Recursive']" semanticCandidatesExpression="aql:self.getVisualizablePropertyRestrictions()" doubleClickDescription="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Select%20in%20Editor']" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Concept'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Aspect'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='RelationEntity'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Structure']" targetMapping="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Concept'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Aspect'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='RelationEntity'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Structure']" targetFinderExpression="aql:self.range" sourceFinderExpression="aql: self.getRestrictingDomain()" domainClass="oml.PropertyRangeRestrictionAxiom" useDomainElement="true">
          <style lineStyle="dash" routingStyle="manhattan">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:diagram.getOntology().getLabel(self)">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="PropertyCardinalityRestrictionAxiom" deletionDescription="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Recursive']" semanticCandidatesExpression="aql:self.getVisualizablePropertyRestrictions()" doubleClickDescription="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Select%20in%20Editor']" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Concept'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Aspect'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='RelationEntity'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Structure']" targetMapping="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Concept'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Aspect'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='RelationEntity'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Structure']" targetFinderExpression="aql:self.range" sourceFinderExpression="aql: self.getRestrictingDomain()" domainClass="oml.PropertyCardinalityRestrictionAxiom" useDomainElement="true">
          <style lineStyle="dash" routingStyle="manhattan">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:diagram.getOntology().getLabel(self)">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="PropertyValueRestrictionAxiom" deletionDescription="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Recursive']" semanticCandidatesExpression="aql:self.getVisualizablePropertyRestrictions()" doubleClickDescription="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Select%20in%20Editor']" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Concept'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Aspect'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='RelationEntity'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Structure']" targetMapping="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='ConceptInstance']" targetFinderExpression="aql:self.getValue()" sourceFinderExpression="aql: self.getRestrictingDomain()" domainClass="oml.PropertyValueRestrictionAxiom" useDomainElement="true">
          <style lineStyle="dash" routingStyle="manhattan">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:diagram.getOntology().getLabel(self)">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="StructuredProperty" deletionDescription="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Recursive']" labelDirectEdit="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Rename%20Member']" semanticCandidatesExpression="aql:self.getVisualizableMembers()" doubleClickDescription="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Select%20in%20Editor']" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Concept'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Aspect'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='RelationEntity'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Structure']" targetMapping="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Structure']" targetFinderExpression="aql:self.ranges" sourceFinderExpression="aql: self.domains" domainClass="oml.StructuredProperty" useDomainElement="true">
          <style routingStyle="manhattan">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:diagram.getOntology().getLabel(self)">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="UnreifiedRelation" deletionDescription="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Recursive']" labelDirectEdit="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Rename%20Member']" semanticCandidatesExpression="aql:self.getVisualizableMembers()" doubleClickDescription="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Select%20in%20Editor']" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Concept'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Aspect'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='RelationEntity']" targetMapping="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Aspect'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Concept'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='RelationEntity']" targetFinderExpression="aql:self.getRanges()" sourceFinderExpression="aql: self.getDomains()" domainClass="oml.UnreifiedRelation" useDomainElement="true">
          <style routingStyle="manhattan">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <beginLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:diagram.getOntology().getReverseLabel(self)">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </beginLabelStyleDescription>
            <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:diagram.getOntology().getLabel(self)">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="RelationEntityEdge" deletionDescription="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Recursive']" labelDirectEdit="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Rename%20Forward%20Relation']" semanticCandidatesExpression="aql:self.getVisualizableMembers()" doubleClickDescription="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Select%20in%20Editor']" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Concept'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Aspect'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='RelationEntity']" targetMapping="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Concept'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Aspect'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='RelationEntity']" targetFinderExpression="aql:self.targets" sourceFinderExpression="aql:self.sources" domainClass="oml.RelationEntity" useDomainElement="true" pathExpression="aql:self">
          <style routingStyle="manhattan">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:diagram.getOntology().getForwardLabel(self)">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="RelationEntityThether" deletionDescription="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Recursive']" labelDirectEdit="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Rename%20Reverse%20Relation']" semanticCandidatesExpression="aql:self.getVisualizableMembers()" doubleClickDescription="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Select%20in%20Editor']" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='RelationEntity']" targetMapping="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@edgeMappings[name='RelationEntityEdge']" targetFinderExpression="aql:self" sourceFinderExpression="aql:self" domainClass="oml.RelationEntity" useDomainElement="true">
          <style lineStyle="dash" targetArrow="NoDecoration" routingStyle="manhattan">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:diagram.getOntology().getReverseLabel(self)">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="Concept" deletionDescription="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Recursive']" labelDirectEdit="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Rename%20Member']" semanticCandidatesExpression="aql:self.getVisualizableMembers()" createElements="false" doubleClickDescription="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Select%20in%20Editor']" domainClass="oml.Concept" childrenPresentation="List">
          <subNodeMappings name="ScalarProperty" deletionDescription="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Recursive']" labelDirectEdit="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Rename%20Scalar%20Property']" semanticCandidatesExpression="aql:diagram.target.oclAsType(oml::Vocabulary).getVisualizableProperties(self)" doubleClickDescription="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Select%20in%20Editor']" synchronizationLock="true" domainClass="oml.ScalarProperty">
            <style xsi:type="style:SquareDescription" labelSize="12" labelExpression="aql:diagram.getOntology().getLabel(view.getParent().target.oclAsType(oml::Classifier),  self)" iconPath="/io.opencaesar.rosetta.sirius.viewpoint/icons/scalar-property.png" labelAlignment="LEFT" tooltipExpression="aql:view.getSemanticDiagram().getOntology().getLabel(self)" labelPosition="node" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="8" arcHeight="8" borderSizeComputationExpression="1" labelSize="12" labelExpression="aql:diagram.getOntology().getLabel(self)" iconPath="/io.opencaesar.rosetta.sirius.viewpoint/icons/c-icon.png" tooltipExpression="aql:view.getSemanticDiagram().getOntology().getLabel(self)" roundedCorner="true" backgroundStyle="Liquid">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_yellow']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <containerMappings name="Aspect" deletionDescription="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Recursive']" labelDirectEdit="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Rename%20Member']" semanticCandidatesExpression="aql:self.getVisualizableMembers()" createElements="false" doubleClickDescription="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Select%20in%20Editor']" domainClass="oml.Aspect" reusedNodeMappings="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Concept']/@subNodeMappings[name='ScalarProperty']" childrenPresentation="List">
          <style xsi:type="style:FlatContainerStyleDescription" arcHeight="8" borderSizeComputationExpression="1" labelSize="12" labelExpression="aql:diagram.getOntology().getLabel(self)" iconPath="/io.opencaesar.rosetta.sirius.viewpoint/icons/a-icon.png" tooltipExpression="aql:view.getSemanticDiagram().getOntology().getLabel(self)" roundedCorner="true" backgroundStyle="Liquid">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_yellow']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <containerMappings name="RelationEntity" deletionDescription="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Recursive']" labelDirectEdit="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Rename%20Member']" createElements="false" doubleClickDescription="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Select%20in%20Editor']" domainClass="oml.RelationEntity" reusedNodeMappings="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Concept']/@subNodeMappings[name='ScalarProperty']" childrenPresentation="List">
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="8" arcHeight="8" borderSizeComputationExpression="1" labelSize="12" labelExpression="aql:diagram.getOntology().getLabel(self)" iconPath="/io.opencaesar.rosetta.sirius.viewpoint/icons/r-icon.png" tooltipExpression="aql:view.getSemanticDiagram().getOntology().getLabel(self)" roundedCorner="true" backgroundStyle="Liquid">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <containerMappings name="ConceptInstance" deletionDescription="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Recursive']" labelDirectEdit="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Rename%20Member']" semanticCandidatesExpression="aql:self.getVisualizableMembers()" createElements="false" doubleClickDescription="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Select%20in%20Editor']" domainClass="oml.ConceptInstance" childrenPresentation="List">
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" labelExpression="aql:diagram.getOntology().getLabel(self)" iconPath="/io.opencaesar.rosetta.sirius.viewpoint/icons/i-icon.png" tooltipExpression="aql:view.getSemanticDiagram().getOntology().getLabel(self)" backgroundStyle="Liquid">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <containerMappings name="Rule" deletionDescription="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Recursive']" labelDirectEdit="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Rename%20Member']" semanticCandidatesExpression="aql:self.getVisualizableMembers()" createElements="false" doubleClickDescription="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Select%20in%20Editor']" domainClass="oml.Rule" childrenPresentation="VerticalStack">
          <subContainerMappings name="Antecedent" deletionDescription="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Recursive']" semanticCandidatesExpression="var:self" doubleClickDescription="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Select%20in%20Editor']" synchronizationLock="true" domainClass="oml.Rule" childrenPresentation="List">
            <subNodeMappings name="Antecedent Predicate" deletionDescription="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Recursive']" semanticCandidatesExpression="aql:self.antecedent" doubleClickDescription="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Select%20in%20Editor']" synchronizationLock="true" domainClass="oml.Predicate">
              <style xsi:type="style:SquareDescription" labelSize="12" showIcon="false" labelExpression="aql:diagram.target.oclAsType(oml::Vocabulary).getLabel(self)" labelAlignment="LEFT" tooltipExpression="aql:view.getParentDiagram().oclAsType(diagram::DSemanticDiagram).target.oclAsType(oml::Vocabulary).getLabel(self)" labelPosition="node" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </subNodeMappings>
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="Antecedent" tooltipExpression="aql:view.getSemanticDiagram().getOntology().getLabel(self)" hideLabelByDefault="true" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </style>
          </subContainerMappings>
          <subContainerMappings name="Consequent" deletionDescription="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Recursive']" semanticCandidatesExpression="var:self" doubleClickDescription="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Select%20in%20Editor']" synchronizationLock="true" domainClass="oml.Rule" childrenPresentation="List">
            <subNodeMappings name="Consequent Predicate" deletionDescription="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Recursive']" semanticCandidatesExpression="aql:self.consequent" doubleClickDescription="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Select%20in%20Editor']" synchronizationLock="true" domainClass="oml.Predicate">
              <style xsi:type="style:SquareDescription" labelSize="12" showIcon="false" labelExpression="aql:diagram.target.oclAsType(oml::Vocabulary).getLabel(self)" labelAlignment="LEFT" tooltipExpression="aql:view.getParentDiagram().oclAsType(diagram::DSemanticDiagram).target.oclAsType(oml::Vocabulary).getLabel(self)" labelPosition="node" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </subNodeMappings>
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="Consequent" tooltipExpression="aql:view.getSemanticDiagram().getOntology().getLabel(self)" hideLabelByDefault="true" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </style>
          </subContainerMappings>
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="8" arcHeight="8" borderSizeComputationExpression="1" labelSize="12" labelExpression="aql:diagram.getOntology().getLabel(self)" iconPath="/io.opencaesar.rosetta.sirius.viewpoint/icons/r-icon.png" tooltipExpression="aql:view.getSemanticDiagram().getOntology().getLabel(self)" backgroundStyle="Liquid">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <containerMappings name="Structure" deletionDescription="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Recursive']" labelDirectEdit="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Rename%20Member']" semanticCandidatesExpression="aql:self.getVisualizableMembers()" createElements="false" doubleClickDescription="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Select%20in%20Editor']" domainClass="oml.Structure" reusedNodeMappings="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Concept']/@subNodeMappings[name='ScalarProperty']" childrenPresentation="List">
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" labelExpression="aql:diagram.getOntology().getLabel(self)" iconPath="/io.opencaesar.rosetta.sirius.viewpoint/icons/s-icon.png" tooltipExpression="aql:view.getSemanticDiagram().getOntology().getLabel(self)" backgroundStyle="Liquid">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_yellow']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <containerMappings name="Scalar" deletionDescription="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Recursive']" labelDirectEdit="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Rename%20Member']" semanticCandidatesExpression="aql:self.getVisualizableMembers()" createElements="false" doubleClickDescription="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Select%20in%20Editor']" domainClass="oml.Scalar" childrenPresentation="List">
          <subNodeMappings name="Literal" deletionDescription="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Recursive']" labelDirectEdit="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Rename%20Literal']" semanticCandidatesExpression="aql:diagram.target.oclAsType(oml::Vocabulary).getVisualizableLiterals(self)" doubleClickDescription="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.0/@ownedTools[name='Select%20in%20Editor']" synchronizationLock="true" domainClass="oml.Literal">
            <style xsi:type="style:SquareDescription" labelSize="12" showIcon="false" labelExpression="aql:self.getLabel()" labelAlignment="LEFT" tooltipExpression="aql:self.getLabel()" labelPosition="node" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" labelExpression="aql:diagram.getOntology().getLabel(self)" iconPath="/io.opencaesar.rosetta.sirius.viewpoint/icons/e-icon.png" tooltipExpression="aql:view.getSemanticDiagram().getOntology().getLabel(self)" backgroundStyle="Liquid">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_yellow']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <toolSections name="Other">
          <ownedTools xsi:type="tool:DoubleClickDescription" name="Select in Editor" mappings="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Aspect'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Concept'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='ConceptInstance'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@edgeMappings[name='PropertyCardinalityRestrictionAxiom'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@edgeMappings[name='RelationEntityEdge'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@edgeMappings[name='PropertyRangeRestrictionAxiom'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@edgeMappings[name='PropertyValueRestrictionAxiom'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@edgeMappings[name='SpecializationAxiom'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Concept']/@subNodeMappings[name='ScalarProperty'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Rule'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Rule']/@subContainerMappings[name='Antecedent'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Rule']/@subContainerMappings[name='Antecedent']/@subNodeMappings[name='Antecedent%20Predicate'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Rule']/@subContainerMappings[name='Consequent'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Rule']/@subContainerMappings[name='Consequent']/@subNodeMappings[name='Consequent%20Predicate'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Structure'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Scalar'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Scalar']/@subNodeMappings[name='Literal'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@edgeMappings[name='StructuredProperty'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='RelationEntity'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@edgeMappings[name='RelationEntityThether'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@edgeMappings[name='UnreifiedRelation']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.openAndSelectInEditor()"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="Recursive">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.recursiveDelete()"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="None" precondition="aql:false">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:GroupMenu" name="Add" precondition="aql:true" locationURI="menu">
            <itemDescriptions xsi:type="tool_1:OperationAction" name="Add Related Elements">
              <view name="views">
                <subVariables xsi:type="tool_1:AcceleoVariable" name="diagram" computationExpression="feature:self"/>
              </view>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:For" expression="aql:self.oclAsType(oml::Vocabulary).getLocalVisualizableMembers()">
                  <subModelOperations xsi:type="tool_1:Switch">
                    <cases conditionExpression="aql:i.oclIsKindOf(oml::Concept)">
                      <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Concept']" containerViewExpression="var:diagram"/>
                    </cases>
                    <cases conditionExpression="aql:i.oclIsKindOf(oml::Aspect)">
                      <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Aspect']" containerViewExpression="var:diagram"/>
                    </cases>
                    <cases conditionExpression="aql:i.oclIsKindOf(oml::RelationEntity)">
                      <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='RelationEntity']" containerViewExpression="var:diagram"/>
                    </cases>
                    <cases conditionExpression="aql:i.oclIsKindOf(oml::Structure)">
                      <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Structure']" containerViewExpression="var:diagram"/>
                    </cases>
                    <cases conditionExpression="aql:i.oclIsKindOf(oml::Scalar)">
                      <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Scalar']" containerViewExpression="var:diagram"/>
                    </cases>
                    <cases conditionExpression="aql:i.oclIsKindOf(oml::Rule)">
                      <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Rule']" containerViewExpression="var:diagram"/>
                    </cases>
                    <cases conditionExpression="aql:i.oclIsKindOf(oml::ConceptInstance)">
                      <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='Descriptions']/@ownedRepresentations[name='Description%20Diagram']/@defaultLayer/@containerMappings[name='ConceptInstance']" containerViewExpression="var:diagram"/>
                    </cases>
                    <default/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </itemDescriptions>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="Add Related Elements" mappings="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@nodeMappings[name='Empty']">
            <element name="element"/>
            <elementView name="elementView">
              <subVariables xsi:type="tool_1:AcceleoVariable" name="diagram" computationExpression="aql:elementView.getParentDiagram()"/>
            </elementView>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:For" expression="aql:element.oclAsType(oml::Vocabulary).getLocalVisualizableMembers()">
                <subModelOperations xsi:type="tool_1:Switch">
                  <cases conditionExpression="aql:i.oclIsKindOf(oml::Concept)">
                    <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Concept']" containerViewExpression="var:diagram"/>
                  </cases>
                  <cases conditionExpression="aql:i.oclIsKindOf(oml::Aspect)">
                    <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Aspect']" containerViewExpression="var:diagram"/>
                  </cases>
                  <cases conditionExpression="aql:i.oclIsKindOf(oml::RelationEntity)">
                    <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='RelationEntity']" containerViewExpression="var:diagram"/>
                  </cases>
                  <cases conditionExpression="aql:i.oclIsKindOf(oml::Structure)">
                    <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Structure']" containerViewExpression="var:diagram"/>
                  </cases>
                  <cases conditionExpression="aql:i.oclIsKindOf(oml::Scalar)">
                    <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Scalar']" containerViewExpression="var:diagram"/>
                  </cases>
                  <cases conditionExpression="aql:i.oclIsKindOf(oml::Rule)">
                    <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Rule']" containerViewExpression="var:diagram"/>
                  </cases>
                  <cases conditionExpression="aql:i.oclIsKindOf(oml::ConceptInstance)">
                    <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='Descriptions']/@ownedRepresentations[name='Description%20Diagram']/@defaultLayer/@containerMappings[name='ConceptInstance']" containerViewExpression="var:diagram"/>
                  </cases>
                  <default/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerDropDescription" name="Member from treeview" precondition="aql:true" mappings="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Aspect'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Concept'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='RelationEntity'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Scalar'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Rule'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Structure'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='ConceptInstance']" dragSource="PROJECT_EXPLORER">
            <oldContainer name="oldSemanticContainer"/>
            <newContainer name="newSemanticContainer"/>
            <element name="element"/>
            <newViewContainer name="newContainerView">
              <subVariables xsi:type="tool_1:AcceleoVariable" name="diagram" computationExpression="aql:newContainerView"/>
              <subVariables xsi:type="tool_1:AcceleoVariable" name="vocabulary" computationExpression="aql:newSemanticContainer.oclAsType(oml::Vocabulary)"/>
            </newViewContainer>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:For" expression="aql:element->collect(i|i.oclAsType(oml::Member).resolve())">
                <subModelOperations xsi:type="tool_1:Switch">
                  <cases conditionExpression="aql:i.oclIsKindOf(oml::Concept)">
                    <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Concept']" containerViewExpression="var:diagram">
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:vocabulary.makeMemberAccessible(i)"/>
                    </subModelOperations>
                  </cases>
                  <cases conditionExpression="aql:i.oclIsKindOf(oml::Aspect)">
                    <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Aspect']" containerViewExpression="var:diagram">
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:vocabulary.makeMemberAccessible(i)"/>
                    </subModelOperations>
                  </cases>
                  <cases conditionExpression="aql:i.oclIsKindOf(oml::RelationEntity)">
                    <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='RelationEntity']" containerViewExpression="var:diagram">
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:vocabulary.makeMemberAccessible(i)"/>
                    </subModelOperations>
                  </cases>
                  <cases conditionExpression="aql:i.oclIsKindOf(oml::Structure)">
                    <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Structure']" containerViewExpression="var:diagram">
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:vocabulary.makeMemberAccessible(i)"/>
                    </subModelOperations>
                  </cases>
                  <cases conditionExpression="aql:i.oclIsKindOf(oml::Scalar)">
                    <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Scalar']" containerViewExpression="var:diagram">
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:vocabulary.makeMemberAccessible(i)"/>
                    </subModelOperations>
                  </cases>
                  <cases conditionExpression="aql:i.oclIsKindOf(oml::Rule)">
                    <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Rule']" containerViewExpression="var:diagram">
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:vocabulary.makeMemberAccessible(i)"/>
                    </subModelOperations>
                  </cases>
                  <cases conditionExpression="aql:i.oclIsKindOf(oml::ConceptInstance)">
                    <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='Descriptions']/@ownedRepresentations[name='Description%20Diagram']/@defaultLayer/@containerMappings[name='ConceptInstance']" containerViewExpression="var:diagram">
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:vocabulary.makeMemberAccessible(i)"/>
                    </subModelOperations>
                  </cases>
                  <default/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="Rename Member" inputLabelExpression="feature:name">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:arg0"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="Rename Forward Relation" inputLabelExpression="feature:name">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.oclAsType(oml::RelationEntity)">
                <subModelOperations xsi:type="tool_1:Switch">
                  <cases conditionExpression="aql:arg0 = '' and self.forwardRelation &lt;> null">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.forwardRelation">
                      <subModelOperations xsi:type="tool_1:RemoveElement"/>
                    </subModelOperations>
                  </cases>
                  <cases conditionExpression="aql:arg0 &lt;> '' and self.forwardRelation &lt;> null">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.forwardRelation">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:arg0"/>
                    </subModelOperations>
                  </cases>
                  <cases conditionExpression="aql:arg0 &lt;> '' and self.forwardRelation = null">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="oml.ForwardRelation" referenceName="forwardRelation" variableName="forward">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:arg0"/>
                    </subModelOperations>
                  </cases>
                  <default/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="Rename Reverse Relation" inputLabelExpression="feature:name">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.oclAsType(oml::RelationBase)">
                <subModelOperations xsi:type="tool_1:Switch">
                  <cases conditionExpression="aql:arg0 = '' and self.reverseRelation &lt;> null">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.reverseRelation">
                      <subModelOperations xsi:type="tool_1:RemoveElement"/>
                    </subModelOperations>
                  </cases>
                  <cases conditionExpression="aql:arg0 &lt;> '' and self.reverseRelation &lt;> null">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.reverseRelation">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:arg0"/>
                    </subModelOperations>
                  </cases>
                  <cases conditionExpression="aql:arg0 &lt;> '' and self.reverseRelation = null">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="oml.ReverseRelation" referenceName="reverseRelation" variableName="reverse">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:arg0"/>
                    </subModelOperations>
                  </cases>
                  <default/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="Rename Scalar Property">
            <mask mask="{0} : {1}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.oclAsType(oml::ScalarProperty)">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:arg0"/>
                <subModelOperations xsi:type="tool_1:Unset" featureName="ranges" elementExpression="aql:self.ranges"/>
                <subModelOperations xsi:type="tool_1:SetValue" featureName="ranges" valueExpression="aql:self.getOntology().makeMemberAccessibleByAbbreiatedIri(arg1).oclAsType(oml::Scalar)"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="Rename Literal">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.parseLiteralValue(arg0)"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Existing Elements">
          <ownedTools xsi:type="tool_1:SelectionWizardDescription" name="Add" candidatesExpression="aql:diagram.getUnvisualizedElements()" multiple="true" tree="true" rootExpression="aql:diagram.getLoadedOntologies()" childrenExpression="feature:eContents">
            <element name="element"/>
            <containerView name="containerView">
              <subVariables xsi:type="tool_1:AcceleoVariable" name="diagram" computationExpression="aql:self"/>
            </containerView>
            <container name="container">
              <subVariables xsi:type="tool_1:AcceleoVariable" name="vocabulary" computationExpression="aql:container.oclAsType(oml::Vocabulary)"/>
            </container>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:For" expression="var:element">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:i.oclIsKindOf(oml::Concept)">
                  <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Concept']" containerViewExpression="var:diagram">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:vocabulary.makeMemberAccessible(i)"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:i.oclIsKindOf(oml::Aspect)">
                  <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Aspect']" containerViewExpression="var:diagram">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:vocabulary.makeMemberAccessible(i)"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:i.oclIsKindOf(oml::RelationEntity)">
                  <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='RelationEntity']" containerViewExpression="var:diagram">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:vocabulary.makeMemberAccessible(i)"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:i.oclIsKindOf(oml::Structure)">
                  <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Structure']" containerViewExpression="var:diagram">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:vocabulary.makeMemberAccessible(i)"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:i.oclIsKindOf(oml::Scalar)">
                  <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Scalar']" containerViewExpression="var:diagram">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:vocabulary.makeMemberAccessible(i)"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:i.oclIsKindOf(oml::Rule)">
                  <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Rule']" containerViewExpression="var:diagram">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:vocabulary.makeMemberAccessible(i)"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:i.oclIsKindOf(oml::ConceptInstance)">
                  <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='ConceptInstance']" containerViewExpression="var:diagram">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:vocabulary.makeMemberAccessible(i)"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Types">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Concept" containerMappings="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Concept']" iconPath="/io.opencaesar.rosetta.sirius.viewpoint/icons/c-icon.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="oml::Concept" referenceName="ownedStatements" variableName="member">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:container.getNewMemberName('Concept')"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Aspect" containerMappings="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Aspect']" iconPath="/io.opencaesar.rosetta.sirius.viewpoint/icons/a-icon.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="oml::Aspect" referenceName="ownedStatements" variableName="member">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:container.getNewMemberName('Aspect')"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Structure" containerMappings="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Structure']" iconPath="/io.opencaesar.rosetta.sirius.viewpoint/icons/s-icon.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="oml::Structure" referenceName="ownedStatements" variableName="member">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:container.getNewMemberName('Structure')"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Scalar" containerMappings="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Scalar']" iconPath="/io.opencaesar.rosetta.sirius.viewpoint/icons/e-icon.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="oml::Scalar" referenceName="ownedStatements" variableName="member">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:container.getNewMemberName('Scalar')"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Relation Entity" edgeMappings="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@edgeMappings[name='UnreifiedRelation']" iconPath="/io.opencaesar.rosetta.sirius.viewpoint/icons/association.png">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:sourceView.getParentDiagram().getVocabulary().createRelationEntity(source, target)">
                <subModelOperations xsi:type="tool:CreateView" mapping="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='RelationEntity']" containerViewExpression="aql:sourceView.getParentDiagram()"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Specialization" edgeMappings="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@edgeMappings[name='SpecializationAxiom']" iconPath="/io.opencaesar.rosetta.sirius.viewpoint/icons/specialization.png">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:sourceView.getParentDiagram().getVocabulary().createSpecializationAxiom(source, target)"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Properties">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Scalar Property" nodeMappings="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Concept']/@subNodeMappings[name='ScalarProperty']" iconPath="/io.opencaesar.rosetta.sirius.viewpoint/icons/scalar-property.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:containerView.getVocabulary().createScalarProperty(container)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Structured Property" edgeMappings="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@edgeMappings[name='StructuredProperty']" iconPath="/io.opencaesar.rosetta.sirius.viewpoint/icons/association.png">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:sourceView.getParentDiagram().getVocabulary().createStructuredProperty(source, target)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Unreified Relation" edgeMappings="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@edgeMappings[name='UnreifiedRelation']" iconPath="/io.opencaesar.rosetta.sirius.viewpoint/icons/association.png">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:sourceView.getParentDiagram().getVocabulary().createUnreifiedRelation(source, target)"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Restrictions">
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Range Restriction" edgeMappings="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@edgeMappings[name='PropertyRangeRestrictionAxiom']" iconPath="/io.opencaesar.rosetta.sirius.viewpoint/icons/restriction.png">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="oml.PropertyRangeRestrictionAxiom" referenceName="ownedPropertyRestrictions" variableName="axiom">
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Create">
                    <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="self"/>
                      </initialOperation>
                    </buttons>
                    <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="self"/>
                      </initialOperation>
                    </buttons>
                    <page name="Property Range Restriction" labelExpression="Property Range Restriction" domainClass="oml.PropertyRangeRestrictionAxiom" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.4/@ownedTools[name='Range%20Restriction']/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.0/@groups.0"/>
                    <groups name="General" labelExpression="General" semanticCandidateExpression="var:self">
                      <controls xsi:type="properties:SelectDescription" name="Property" labelExpression="Property:" valueExpression="aql:self.oclAsType(oml::PropertyRestrictionAxiom).property" candidatesExpression="aql:source.oclAsType(oml::Entity).getCandidateSemanticProperties()" candidateDisplayExpression="aql:candidate.oclAsType(oml::SemanticProperty).getAbbreviatedIri()">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool_1:SetValue" featureName="property" valueExpression="aql:newValue"/>
                        </initialOperation>
                      </controls>
                      <controls xsi:type="properties:RadioDescription" name="Kind" labelExpression="Restriction kind:" valueExpression="aql:self.oclAsType(oml::PropertyRangeRestrictionAxiom).kind" candidatesExpression="aql:self.getRangeRestrictionKindLiterals()" candidateDisplayExpression="aql:candidate.toString()" numberOfColumns="2">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool_1:SetValue" featureName="kind" valueExpression="aql:newValue"/>
                        </initialOperation>
                      </controls>
                    </groups>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="range" valueExpression="var:target"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:SetValue" featureName="ownedPropertyRestrictions" valueExpression="var:axiom"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Cardinality Restriction" edgeMappings="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@edgeMappings[name='PropertyCardinalityRestrictionAxiom']" iconPath="/io.opencaesar.rosetta.sirius.viewpoint/icons/restriction.png">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="oml.PropertyCardinalityRestrictionAxiom" referenceName="ownedPropertyRestrictions" variableName="axiom">
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Create">
                    <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="self"/>
                      </initialOperation>
                    </buttons>
                    <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="self"/>
                      </initialOperation>
                    </buttons>
                    <page name="Property Cardinality Restriction" labelExpression="Property Cardinality Restriction" domainClass="oml.PropertyCardinalityRestrictionAxiom" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.4/@ownedTools[name='Cardinality%20Restriction']/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.0/@groups.0"/>
                    <groups name="General" labelExpression="General" semanticCandidateExpression="var:self">
                      <controls xsi:type="properties:SelectDescription" name="Property" labelExpression="Property:" valueExpression="aql:self.oclAsType(oml::PropertyRestrictionAxiom).property" candidatesExpression="aql:source.oclAsType(oml::Classifier).getCandidateSemanticProperties()" candidateDisplayExpression="aql:candidate.oclAsType(oml::SemanticProperty).getAbbreviatedIri()">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool_1:SetValue" featureName="property" valueExpression="aql:newValue"/>
                        </initialOperation>
                      </controls>
                      <controls xsi:type="properties:RadioDescription" name="Kind" labelExpression="Cardinality kind:" valueExpression="aql:self.oclAsType(oml::PropertyCardinalityRestrictionAxiom).kind" candidatesExpression="aql:self.getCardinalityRestrictionKindLiterals()" candidateDisplayExpression="aql:candidate.toString()" numberOfColumns="2">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool_1:SetValue" featureName="kind" valueExpression="aql:newValue"/>
                        </initialOperation>
                      </controls>
                      <controls xsi:type="properties:TextDescription" name="Cardinality" labelExpression="Cardinality:" valueExpression="aql:self.oclAsType(oml::PropertyCardinalityRestrictionAxiom).cardinality">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool_1:SetValue" featureName="cardinality" valueExpression="aql:newValue"/>
                        </initialOperation>
                      </controls>
                    </groups>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:axiom.property.findRanges(null)->excludes(target.oclAsType(oml::Classifier))">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="range" valueExpression="var:target"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:SetValue" featureName="ownedPropertyRestrictions" valueExpression="var:axiom"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Value Restriction" edgeMappings="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@edgeMappings[name='PropertyValueRestrictionAxiom']" iconPath="/io.opencaesar.rosetta.sirius.viewpoint/icons/restriction.png">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="oml.PropertyValueRestrictionAxiom" referenceName="ownedPropertyRestrictions" variableName="axiom">
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Create">
                    <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="self"/>
                      </initialOperation>
                    </buttons>
                    <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="self"/>
                      </initialOperation>
                    </buttons>
                    <page name="Property Value Restriction" labelExpression="Property Value Restriction" domainClass="oml.PropertyValueRestrictionAxiom" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@toolSections.4/@ownedTools[name='Value%20Restriction']/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.0/@groups.0"/>
                    <groups name="General" labelExpression="General" semanticCandidateExpression="var:self">
                      <controls xsi:type="properties:SelectDescription" name="Property" labelExpression="Property:" valueExpression="aql:self.oclAsType(oml::PropertyRestrictionAxiom).property" candidatesExpression="aql:source.oclAsType(oml::Entity).getCandidateSemanticProperties()" candidateDisplayExpression="aql:candidate.oclAsType(oml::SemanticProperty).getAbbreviatedIri()">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool_1:SetValue" featureName="property" valueExpression="aql:newValue"/>
                        </initialOperation>
                      </controls>
                    </groups>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="referencedValue" valueExpression="var:target"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:SetValue" featureName="ownedPropertyRestrictions" valueExpression="var:axiom"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Rules">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Rule" precondition="aql:self.getOntology().getMembers()->select(m|m.oclIsKindOf(oml::Type))" containerMappings="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Rule']" iconPath="/io.opencaesar.rosetta.sirius.viewpoint/icons/r-icon.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="oml::Rule" referenceName="ownedStatements" variableName="member">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:container.getNewMemberName('Rule')"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Type Predicate" nodeMappings="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Rule']/@subContainerMappings[name='Antecedent']/@subNodeMappings[name='Antecedent%20Predicate'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Rule']/@subContainerMappings[name='Consequent']/@subNodeMappings[name='Consequent%20Predicate']" iconPath="/io.opencaesar.rosetta.sirius.viewpoint/icons/scalar-property.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:containerView.getMapping().name = 'Antecedent'">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="oml::TypePredicate" referenceName="antecedent" variableName="predicate">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:predicate">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="oml::Argument" referenceName="argument" variableName="argument">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="variable" valueExpression="x"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:containerView.getMapping().name = 'Consequent'">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="oml::TypePredicate" referenceName="consequent" variableName="predicate">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:predicate">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="oml::Argument" referenceName="argument" variableName="argument">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="variable" valueExpression="x"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Property Predicate" nodeMappings="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Rule']/@subContainerMappings[name='Antecedent']/@subNodeMappings[name='Antecedent%20Predicate'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Rule']/@subContainerMappings[name='Consequent']/@subNodeMappings[name='Consequent%20Predicate']" iconPath="/io.opencaesar.rosetta.sirius.viewpoint/icons/scalar-property.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:containerView.getMapping().name = 'Antecedent'">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="oml::PropertyPredicate" referenceName="antecedent" variableName="predicate">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:predicate">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="oml::Argument" referenceName="argument1" variableName="argument1">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="variable" valueExpression="x"/>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="oml::Argument" referenceName="argument2" variableName="argument2">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="variable" valueExpression="y"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:containerView.getMapping().name = 'Consequent'">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="oml::PropertyPredicate" referenceName="consequent" variableName="predicate">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:predicate">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="oml::Argument" referenceName="argument1" variableName="argument1">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="variable" valueExpression="x"/>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="oml::Argument" referenceName="argument2" variableName="argument2">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="variable" valueExpression="y"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Relation Entity Predicate" nodeMappings="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Rule']/@subContainerMappings[name='Antecedent']/@subNodeMappings[name='Antecedent%20Predicate'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Rule']/@subContainerMappings[name='Consequent']/@subNodeMappings[name='Consequent%20Predicate']" iconPath="/io.opencaesar.rosetta.sirius.viewpoint/icons/scalar-property.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:containerView.getMapping().name = 'Antecedent'">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="oml::RelationEntityPredicate" referenceName="antecedent" variableName="predicate">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:predicate">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="oml::Argument" referenceName="argument1" variableName="argument1">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="variable" valueExpression="x"/>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="oml::Argument" referenceName="argument2" variableName="argument2">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="variable" valueExpression="y"/>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="oml::Argument" referenceName="argument" variableName="argument">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="variable" valueExpression="r"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:containerView.getMapping().name = 'Consequent'">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="oml::RelationEntityPredicate" referenceName="consequent" variableName="predicate">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:predicate">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="oml::Argument" referenceName="argument1" variableName="argument1">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="variable" valueExpression="x"/>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="oml::Argument" referenceName="argument2" variableName="argument2">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="variable" valueExpression="y"/>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="oml::Argument" referenceName="argument" variableName="argument">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="variable" valueExpression="r"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="SameAs Predicate" nodeMappings="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Rule']/@subContainerMappings[name='Antecedent']/@subNodeMappings[name='Antecedent%20Predicate'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Rule']/@subContainerMappings[name='Consequent']/@subNodeMappings[name='Consequent%20Predicate']" iconPath="/io.opencaesar.rosetta.sirius.viewpoint/icons/scalar-property.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:containerView.getMapping().name = 'Antecedent'">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="oml::SameAsPredicate" referenceName="antecedent" variableName="predicate">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:predicate">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="oml::Argument" referenceName="argument1" variableName="argument1">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="variable" valueExpression="x"/>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="oml::Argument" referenceName="argument2" variableName="argument2">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="variable" valueExpression="y"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:containerView.getMapping().name = 'Consequent'">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="oml::SameAsPredicate" referenceName="consequent" variableName="predicate">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:predicate">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="oml::Argument" referenceName="argument1" variableName="argument1">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="variable" valueExpression="x"/>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="oml::Argument" referenceName="argument2" variableName="argument2">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="variable" valueExpression="y"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="DifferentFrom Predicate" nodeMappings="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Rule']/@subContainerMappings[name='Antecedent']/@subNodeMappings[name='Antecedent%20Predicate'] //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Rule']/@subContainerMappings[name='Consequent']/@subNodeMappings[name='Consequent%20Predicate']" iconPath="/io.opencaesar.rosetta.sirius.viewpoint/icons/scalar-property.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:containerView.getMapping().name = 'Antecedent'">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="oml::DifferentFromPredicate" referenceName="antecedent" variableName="predicate">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:predicate">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="oml::Argument" referenceName="argument1" variableName="argument1">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="variable" valueExpression="x"/>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="oml::Argument" referenceName="argument2" variableName="argument2">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="variable" valueExpression="y"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:containerView.getMapping().name = 'Consequent'">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="oml::DifferentFromPredicate" referenceName="consequent" variableName="predicate">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:predicate">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="oml::Argument" referenceName="argument1" variableName="argument1">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="variable" valueExpression="x"/>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="oml::Argument" referenceName="argument2" variableName="argument2">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="variable" valueExpression="y"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Literals">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Quoted Literal" nodeMappings="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Scalar']/@subNodeMappings[name='Literal']" iconPath="/io.opencaesar.rosetta.sirius.viewpoint/icons/literal.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:containerView.getVocabulary().createQuotedEnumerationLiteral(container)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Boolean Literal" nodeMappings="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Scalar']/@subNodeMappings[name='Literal']" iconPath="/io.opencaesar.rosetta.sirius.viewpoint/icons/literal.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:containerView.getVocabulary().createBooleanEnumerationLiteral(container)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Integer Literal" nodeMappings="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Scalar']/@subNodeMappings[name='Literal']" iconPath="/io.opencaesar.rosetta.sirius.viewpoint/icons/literal.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:containerView.getVocabulary().createIntegerEnumerationLiteral(container)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Decimal Literal" nodeMappings="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Scalar']/@subNodeMappings[name='Literal']" iconPath="/io.opencaesar.rosetta.sirius.viewpoint/icons/literal.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:containerView.getVocabulary().createDecimalEnumerationLiteral(container)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Double Literal" nodeMappings="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Scalar']/@subNodeMappings[name='Literal']" iconPath="/io.opencaesar.rosetta.sirius.viewpoint/icons/literal.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:containerView.getVocabulary().createDoubleEnumerationLiteral(container)"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql:self.oclAsType(oml::IdentifiedElement).getOntology() &lt;> container">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Aspect']/@style //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Concept']/@style //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='RelationEntity']/@style //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Structure']/@style //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Scalar']/@style //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Rule']/@style //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='ConceptInstance']/@style" referenceName="foregroundColor">
              <value href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
            </featureCustomizations>
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Aspect']/@style //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Concept']/@style //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='RelationEntity']/@style //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Structure']/@style //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Scalar']/@style //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='Rule']/@style //@ownedViewpoints[name='Vocabularies']/@ownedRepresentations[name='Vocabulary%20Editor']/@defaultLayer/@containerMappings[name='ConceptInstance']/@style" referenceName="backgroundColor">
              <value href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
            </featureCustomizations>
          </vsmElementCustomizations>
        </customization>
      </defaultLayer>
    </ownedRepresentations>
    <ownedJavaExtensions qualifiedClassName="io.opencaesar.oml.util.OmlRead"/>
    <ownedJavaExtensions qualifiedClassName="io.opencaesar.oml.util.OmlSearch"/>
    <ownedJavaExtensions qualifiedClassName="io.opencaesar.oml.util.OmlWrite"/>
    <ownedJavaExtensions qualifiedClassName="io.opencaesar.oml.util.OmlDelete"/>
    <ownedJavaExtensions qualifiedClassName="io.opencaesar.rosetta.sirius.viewpoint.internal.OmlServices"/>
    <ownedJavaExtensions qualifiedClassName="io.opencaesar.rosetta.sirius.utils.UIServices"/>
  </ownedViewpoints>
  <extensions xsi:type="properties:ViewExtensionDescription" name="Properties">
    <metamodels href="http://opencaesar.io/oml#/"/>
    <categories name="Default">
      <pages name="sirius_default_rules_defaultpage" labelExpression="aql:input.emfEditServices(self).getTabName()" semanticCandidateExpression="aql:input.getAllSemanticElements()" groups="//@extensions.0/@categories.0/@groups.0"/>
      <pages name="Instance" labelExpression="Instance" domainClass="oml.Instance" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.1"/>
      <groups name="sirius_default_rules_defaultgroup" labelExpression="Properties" semanticCandidateExpression="var:self" preconditionExpression="">
        <controls xsi:type="properties:DynamicMappingForDescription" name="sirius_default_rules_structural_features_for" iterator="eStructuralFeature" iterableExpression="aql:self.eClass().eAllStructuralFeatures->select(f|f.name = 'name')">
          <ifs name="name" predicateExpression="aql:true">
            <widget xsi:type="properties:TextDescription" name="sirius_default_rules_mono_string" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue.toString().replaceAll(' ', ''))"/>
              </initialOperation>
            </widget>
          </ifs>
        </controls>
        <controls xsi:type="properties:DynamicMappingForDescription" name="sirius_default_rules_structural_features_for" iterator="eStructuralFeature" iterableExpression="aql:self.eClass().eAllStructuralFeatures->select(f|f.name = 'forwardRelation')">
          <ifs name="forwardRelation" predicateExpression="aql:true">
            <widget xsi:type="properties:TextDescription" name="sirius_default_rules_mono_string" labelExpression="Forward Name:" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:let relation = self.eGet(eStructuralFeature.name) in if relation &lt;> null then relation.oclAsType(oml::Relation).name else '' endif">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.oclAsType(oml::RelationEntity)">
                  <subModelOperations xsi:type="tool_1:Switch">
                    <cases conditionExpression="aql:newValue = '' and self.forwardRelation &lt;> null">
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.forwardRelation">
                        <subModelOperations xsi:type="tool_1:RemoveElement"/>
                      </subModelOperations>
                    </cases>
                    <cases conditionExpression="aql:newValue &lt;> '' and self.forwardRelation &lt;> null">
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.forwardRelation">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:newValue"/>
                      </subModelOperations>
                    </cases>
                    <cases conditionExpression="aql:newValue &lt;> '' and self.forwardRelation = null">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="oml.ForwardRelation" referenceName="forwardRelation" variableName="forward">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:newValue"/>
                      </subModelOperations>
                    </cases>
                    <default/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </widget>
          </ifs>
        </controls>
        <controls xsi:type="properties:DynamicMappingForDescription" name="sirius_default_rules_structural_features_for" iterator="eStructuralFeature" iterableExpression="aql:self.eClass().eAllStructuralFeatures->select(f|f.name = 'reverseRelation')">
          <ifs name="reverseRelation" predicateExpression="aql:true">
            <widget xsi:type="properties:TextDescription" name="sirius_default_rules_mono_string" labelExpression="Reverse Name:" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:let relation = self.eGet(eStructuralFeature.name) in if relation &lt;> null then relation.oclAsType(oml::Relation).name else '' endif">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.oclAsType(oml::RelationBase)">
                  <subModelOperations xsi:type="tool_1:Switch">
                    <cases conditionExpression="aql:newValue = '' and self.reverseRelation &lt;> null">
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.reverseRelation">
                        <subModelOperations xsi:type="tool_1:RemoveElement"/>
                      </subModelOperations>
                    </cases>
                    <cases conditionExpression="aql:newValue &lt;> '' and self.reverseRelation &lt;> null">
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.reverseRelation">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:newValue"/>
                      </subModelOperations>
                    </cases>
                    <cases conditionExpression="aql:newValue &lt;> '' and self.reverseRelation = null">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="oml.ReverseRelation" referenceName="reverseRelation" variableName="reverse">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:newValue"/>
                      </subModelOperations>
                    </cases>
                    <default/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </widget>
          </ifs>
        </controls>
        <controls xsi:type="properties:DynamicMappingForDescription" name="sirius_default_rules_structural_features_for" iterator="eStructuralFeature" iterableExpression="aql:input.emfEditServices(self).getEStructuralFeatures()->reject(f|f.name = 'name')">
          <ifs name="sirius_default_rules_mono_string_if" predicateExpression="aql:input.emfEditServices(self).needsTextWidget(eStructuralFeature) and not input.emfEditServices(self).isMultiline(eStructuralFeature)">
            <widget xsi:type="properties:TextDescription" name="sirius_default_rules_mono_string" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_multi_string_if" predicateExpression="aql:input.emfEditServices(self).needsTextWidget(eStructuralFeature) and input.emfEditServices(self).isMultiline(eStructuralFeature)">
            <widget xsi:type="properties:TextAreaDescription" name="sirius_default_rules_multi_string" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_mono_boolean" predicateExpression="aql:input.emfEditServices(self).needsCheckboxWidget(eStructuralFeature)">
            <widget xsi:type="properties:CheckboxDescription" name="sirius_default_rules_mono_boolean" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_enum_if" predicateExpression="aql:eStructuralFeature.eType.oclIsKindOf(ecore::EEnum) and not(eStructuralFeature.many)">
            <widget xsi:type="properties:RadioDescription" name="sirius_default_rules_enum" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:eStructuralFeature.eType.oclAsType(ecore::EEnum).getEEnumLiteralByLiteral(self.eGet(eStructuralFeature.name).toString())" candidatesExpression="aql:eStructuralFeature.eType.oclAsType(ecore::EEnum).eLiterals" candidateDisplayExpression="aql:candidate.name" numberOfColumns="5">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue.instance)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_eattribute_many_if" predicateExpression="aql:eStructuralFeature.oclIsKindOf(ecore::EAttribute) and eStructuralFeature.many">
            <widget xsi:type="properties:ListDescription" name="sirius_default_rules_eattribute_many" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)" displayExpression="var:value"/>
          </ifs>
          <ifs name="sirius_default_rules_ereference_if" predicateExpression="aql:eStructuralFeature.oclIsKindOf(ecore::EReference)">
            <widget xsi:type="properties-ext-widgets-reference:ExtReferenceDescription" name="sirius_default_rules_ereference" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" referenceNameExpression="aql:eStructuralFeature.name"/>
          </ifs>
        </controls>
      </groups>
      <groups name="Instance" labelExpression="Properties" domainClass="oml.Instance" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:DynamicMappingForDescription" name="sirius_default_rules_structural_features_for" iterator="property" iterableExpression="aql:self.allScalarProperties()">
          <ifs name="sirius_default_rules_mono_string_if" predicateExpression="aql:property.isStringProperty() and property.functional">
            <widget xsi:type="properties:TextDescription" name="sirius_default_rules_mono_string" labelExpression="aql:property.name+':'" valueExpression="aql:let value=self.getPropertyLiteralValue(property) in if value &lt;> null then value.getValue() else '' endif">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.oclAsType(oml::Instance).setPropertyValue(property, newValue)"/>
              </initialOperation>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_mono_boolean" predicateExpression="aql:property.isBooleanProperty() and property.functional">
            <widget xsi:type="properties:CheckboxDescription" name="sirius_default_rules_mono_boolean" labelExpression="aql:property.name+':'" valueExpression="aql:let value=self.getPropertyLiteralValue(property) in if value &lt;> null then value.getValue() else false endif">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.oclAsType(oml::Instance).setPropertyValue(property, newValue)"/>
              </initialOperation>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_enum_if" predicateExpression="aql:property.findIsEnumeratedProperty(null) and property.functional">
            <widget xsi:type="properties:RadioDescription" name="sirius_default_rules_enum" labelExpression="aql:property.name+':'" valueExpression="aql:let value=self.getPropertyLiteralValue(property) in if value &lt;> null then value.getValue() else false endif" candidatesExpression="aql:property.getEnumeratiomLiteralValues()" candidateDisplayExpression="aql:candidate.toString()" numberOfColumns="5">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.oclAsType(oml::Instance).setPropertyValue(property, newValue)"/>
              </initialOperation>
            </widget>
          </ifs>
        </controls>
      </groups>
    </categories>
  </extensions>
</description:Group>
